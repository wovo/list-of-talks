Saturday, September 14
 
09:00 MDT
Advanced and Modern C++ Programming: The Tricky Parts
Nicolai Josuttis
C++11/14 for C++03 Developers
Vittorio Romeo
Concurrency with Modern C++
Rainer Grimm
Debugging and Profiling C++ Code on Linux
Milian Wolff
Modern C++ API Design
Bob Steagall
Modern C++ Design Patterns
Klaus Iglberger
Modern C++ Template Common Knowledge
Stephen Dewhurst
More Concurrent Thinking in C++: Beyond the Basics
Anthony Williams
System Architecture And Design Using Modern C++
Charley Bay
The Standard Library from Scratch
Arthur O’Dwyer
Thinking Small
Patrice Roy

17:30 MDT
Volunteers Dinner

 
Sunday, September 15
 
09:00 MDT
Advanced and Modern C++ Programming: The Tricky Parts
Nicolai Josuttis
C++11/14 for C++03 Developers
Vittorio Romeo
Concurrency with Modern C++
Rainer Grimm
Debugging and Profiling C++ Code on Linux
Milian Wolff
Engage, Entertain, Educate: Technical Speaking that Works
John Lakos • Andrei Alexandrescu • Kate Gregory
Introduction to Conan C++ Package Manager
Diego Rodriguez-Losada
Modern C++ API Design
Bob Steagall
Modern C++ Design Patterns
Klaus Iglberger
Modern C++ Template Common Knowledge
Stephen Dewhurst
More Concurrent Thinking in C++: Beyond the Basics
Anthony Williams
System Architecture And Design Using Modern C++
Charley Bay
The Standard Library from Scratch
Arthur O’Dwyer
Thinking Small
Patrice Roy
Board Games
Peter Bindels

11:15 MDT
Field Trip Meetup
Jason Turner

17:00 MDT
Speaker Ready Room
Robin Kuzmin

17:30 MDT
Tee Shirt Night Dinner

20:00 MDT
Registration Reception

 
Monday, September 16
 
08:00 MDT
Registration

08:45 MDT
C++20: C++ at 40
Bjarne Stroustrup

11:00 MDT
The Best Parts of C++
Jason Turner
An Overview of Standard Ranges
Tristan Brindle
Compiler Explorer: Behind The Scenes
Matt Godbolt
The C++20 Synchronization Library
Bryce Adelstein Lelbach
The C++20 Standard Library: Beyond Ranges
Jeff Garland
Concepts: A Day in the Life
Saar Raz
A C++ Approach to Physical Units
Mateusz Pusz

12:05 MDT
Book Signing: Bjarne Stroustrup
Bjarne Stroustrup

12:30 MDT
Trainers Panel I
Jon Kalb • Ben Saks • Dan Saks • Klaus Iglberger • Stephen Dewhurst

13:35 MDT
Book Signing: Marc Gregoire
Marc Gregoire
Book Signing: Rian Quinn
Rian Quinn

14:00 MDT
Back to Basics: Move Semantics (part 1 of 2)
Klaus Iglberger
Hello World From Scratch
Peter Bindels • Simon Brand
Algorithm Intuition (part 1 of 2)
Conor Hoekstra
What Every Programmer Should Know About Memory Allocation
Samy Al Bahra • Hannes Sowa • Paul Khuong
Freestanding C++ - Past, Present, and Future
Ben Saks
If You Can't Open It, You Don't Own It
Matthew Butler
Writing Safety Critical Automotive C++ Software for High Performance AI Hardware:
Michael Wong • Gordon Brown

15:15 MDT
Back to Basics: Move Semantics (part 2 of 2)
Klaus Iglberger
Algorithm Intuition (part 2 of 2)
Conor Hoekstra
C++ ...Easy, Elegant, Powerful!
Charley Bay
Using Freestanding C++ to add C++17 to your Shellcode, UEFI, Embedded Systems and Unikernels.
Rian Quinn
High performance graphics and text rendering on the GPU for any C++ application
Barbara Geller • Ansel Sermersheim
Programming with C++ Modules: Guide for the Working
Gabriel Dos Reis
When C++ Style Guides Contradict
Nicolai Josuttis

16:45 MDT
Back to Basics: Const as a Promise
Dan Saks
Latest & Greatest in Visual Studio 2019 for C++ developers
Marian Luparu • Simon Brand
From Algorithm to Generic, Parallel Code
Dietmar Kuhl
Value Proposition: Allocator-Aware (AA) Software
John Lakos
Concepts in C++20: Revolution or Evolution
Rainer Grimm
Reflections: Compile-time Introspection of Source Code
Andrew Sutton
Preventing Spectre One Branch at a Time: The Design and Implementation of Fine Grained Spectre v1 Mitigation APIs
Zola Bridges • Devin Jeanpierre
Quickly Testing Legacy C++ Code with Approval Tests
Clare Macrae

17:00 MDT
Speaker Portraits

18:00 MDT
Beverages with Backtrace
Karla Bueno • Karla Bueno
Students' Dinner
Michał Dominiak

20:30 MDT
Committee Fireside Chat
Jon Kalb • Bryce Adelstein Lelbach • Lisa Lippincott • Herb Sutter • Titus Winters • Vittorio Romeo • Marshall Clow • Bjarne Stroustrup • JF Bastien • Hana Dusíková • David Stone

 
Tuesday, September 17
 
08:00 MDT
Threading Design Decisions in AutoCAD for Web & Mobile
Max Raskin

09:00 MDT
Back to Basics: RAII and the Rule of Zero
Arthur O'Dwyer
A Short Life span＜＞ For a Regular Mess
Victor Ciura
C++ as a First Language... Really?
Patrice Roy
Rethinking the Way We Do Templates in C++
Mateusz Pusz
Deep CMake for Library Authors
Craig Scott
Practical C++ Modules
Boris Kolpackov
Will Your Code Survive the Attack of the Zombie Pointers?
Michael Wong • Paul E. McKenney • Maged Michael
Error Handling is Cancelling Operations
Andrzej Krzemieński

10:30 MDT
"Allegro" Means Both Fast and Happy. Coincidence?
Andrei Alexandrescu

12:05 MDT
Book Signing: Herb Sutter
Herb Sutter

12:30 MDT
CppCon Program Committee
Bryce Adelstein Lelbach • Jon Kalb
SG20 Panel: Let's Talk About Education
Michał Dominiak • Christopher Di Bella

13:35 MDT
Book Signing: Anthony Williams
Anthony Williams

14:00 MDT
Back to Basics: Atomics, Locks, and Tasks (part 1 of 2)
Rainer Grimm
Speaker Portraits
Better Code with C++ Attributes
Ben Saks
The Business Value of a Good API
Bob Steagall
EDSL Infinity Wars: Mainstreaming Symbolic Computation
Joel Falcou • Vincent Reverdy
Behind Enemy Lines - Reverse Engineering C++ in Modern Ages
Gal Zaban
10 Techniques to Understand Existing Code
Jonathan Boccara
From Functions to Concepts: Maintainability and Refactoring Impact of Higher-Level Design Features
Titus Winters

15:15 MDT
What's New in Visual Studio Code for C++ Development - Remote Development, IntelliSense, Build/Debug, vcpkg, and More!
Tara Raj
Compiled C++ Coding Standards
Valentin Galea
When C++ Zero-Cost Abstraction fails: how-to Fix Your Compiler
Adrien Guinet
TMI on UDLs: Mechanics, Uses, and Abuses of User-Defined Literals
Stephen Dewhurst
Back to Basics: Atomics, Locks, and Tasks (part 2 of 2)
Rainer Grimm
Efficient GPU Programming with Modern C++
Michael Wong • Gordon Brown
Converting to C++20 Modules
Nathan Sidwell

15:50 MDT
(Ab)using Compiler Tools
Reka Kovacs
C++ Standard Library "Little Things"
Billy O'Neal
Small is beautiful: Techniques to minimise memory footprint
Steven Pigeon
Upgrade from "permissive C++" to "modern C++" with Visual Studio 2019
Nick Uhlenhuth

16:45 MDT
Back to Basics: Object-Oriented Programming
Jon Kalb
Clang-based Refactoring, or How to Refactor Millions of Line of Code Without Alienating your Colleagues
Fred Tingaud
Concurrency in C++20 and Beyond
Anthony Williams
How to Choose the Right Standard Library Container, and Why You Should Want Some More
Alan Talbot
C++ Code Smells
Jason Turner
C++ Design Patterns: From C++03 to C++17
Fedor Pikus
There Are No Zero-cost Abstractions
Chandler Carruth
Unicode: Going Down the Rabbit Hole
Peter Bindels

18:00 MDT
Boost Community Dinner
Audio Developers Meetup
Tom Poole

20:30 MDT
Lightning Talks
Phil Nash
Tool Time
Peter Bindels

 
Wednesday, September 18
 
08:00 MDT
Site Reliability Engineering: Balancing Risk and Velocity
Derek Remund

08:30 MDT
ISO SG14 Working Meeting
Herb Sutter • Michael Wong

09:00 MDT
TCMalloc: A High-Performance Memory Allocator
Chris Kennelly
How to Herd 1,000 Libraries
Robert Schumacher
A Series of Unfortunate Bugs
Satabdi Das
Back to Basics: Test-driven Development
Fedor Pikus
"Mostly Invalid": flat_map, Exception Guarantees, and the STL
Arthur O'Dwyer
C++20: What's in it for you?
Marc Gregoire
A State of Compile Time Regular Expressions
Hana Dusíková

09:35 MDT
Expression Templates for Efficient, Generic Finance Code
Bowie Owens
Minimal Structured Logging for Autonomous Vehicles
Robert Keelan
How to Hold a T
CJ Johnson

10:30 MDT
Applied WebAssembly: Compiling and Running C++ in Your Web Browser
Ben Smith

12:05 MDT
Book Signing: Nicolai Josuttis
Nicolai Josuttis

12:30 MDT
Starting and Running C++ User Groups
Jens Weller

13:00 MDT
ISO SG14 Working Meeting
Herb Sutter • Michael Wong

13:35 MDT
Book Signing: Andrei Alexandrescu
Andrei Alexandrescu
Book Signing: Jonathan Boccara
Jonathan Boccara

14:00 MDT
Speaker Portraits
C++ Sanitizers and Fuzzing for the Windows Platform Using New Compilers, Visual Studio, and Azure
Jim Radigan
Lifetime analysis for everyone
Gábor Horváth • Matthias Gehre
A Unifying Abstraction for Async in C++
Eric Niebler • David Hollman
Abusing Your Memory Model for Fun and Profit
Samy Al Bahra • Paul Khuong
Memory Resources in a Heterogeneous World
Michał Dominiak
ADL: a thorough introduction in name taxonomy, customisation points and use cases in the context of templates
Kostas Kyrimis
Dependency Management at the End of the Rainbow
Corentin Jabot

15:15 MDT
ISO SG14 Working Meeting
Herb Sutter • Michael Wong
Leveraging Modern C++ in Quantitative Finance
Daniel Hanson
How to Implement Your First Compiler Feature: The Story of Concepts in Clang
Saar Raz
Getting Allocators out of Our Way
Alisdair Meredith • Pablo Halpern
Non-conforming C++: the Secrets the Committee Is Hiding From You
Miro Knejp
Meta++: Language Support for Advanced Generative Programming
Andrew Sutton
Making Testing C++ Binaries Practical @ Facebook Scale: A CI Story
Mark Isaacson
Inference in C++: The big picture
Michael Spertus

16:45 MDT
Abseil's Open Source Hashtables: 2 Years In
Matt Kulukundis
How to Write a Heap Memory Profiler
Milian Wolff
Pattern Matching: A Sneak Peek
Michael Park
The One-Decade Task: Putting std::atomic in CUDA.
Olivier Giroux
Contract use: Past, Present, and Future
Joshua Berne
Data in the Type System: Complex Non-Type Template Parameters in C++20
Jeff Snyder
Killing Uninitialized Memory: Protecting the OS Without Destroying Performance
Joe Bialek • Shayne Hiet-Block
Type punning in modern C++
Timur Doumler
ISO SG14 Working Meeting
Herb Sutter • Michael Wong

18:00 MDT
#include Dinner
Kate Gregory • Guy Davidson • JeanHeyd Meneide • Simon Brand • Clare Macrae • Michael Daum

20:30 MDT
Lightning Talks
Phil Nash
Open Content Sessions: TBA

22:00 MDT
Student Reception
Jon Kalb

 
Thursday, September 19
 
08:00 MDT
Open Content Sessions: TBA
Cpp.Chat - Live Episode!
Jon Kalb • Phil Nash

09:00 MDT
Back to Basics: Understanding Value Categories
Ben Saks
Time Travel: Applying Gradual Typing to Time Types with Clang's LibTooling
Hyrum Wright
Asynchronous Programming in Modern C++
Hartmut Kaiser
Are We Macro-free Yet?
Zhihao Yuan
This Videogame Programmer Used the STL and You Will Never Guess What Happened Next
Mathieu Ropert
Avoid Misuse of Contracts!
Rostislav Khlebnikov
Removing Metaprogramming From C++, Part 1 of N: constexpr Function Parameters
David Stone
Destructor Case Studies: Best Practices for Safe and Efficient Teardown
Pete Isensee

10:30 MDT
Better Code: Relationships
Sean Parent

12:05 MDT
Book Signing: Arthur O'Dwyer
Arthur O'Dwyer
Book Signing: Nicolai Josuttis
Nicolai Josuttis

12:30 MDT
Lightning Talks
Kate Gregory
Desktop Applications Development Roundtable
Artem Yerofieiev
Mobile C++ Development Roundtable
Sheldon Neuberger • Li Feng • Brian Holmes
C++ Community Building Birds of a Feather
Jon Kalb • Bryce Adelstein Lelbach • Jens Weller • Stephan T. Lavavej • Phil Nash
On Writing a C++ Book: The Story of "C++ Crash Course"
Josh Lospinoso

13:35 MDT
Book Signing: Josh Lospinoso

14:00 MDT
Back to Basics: Function and Class Templates
Dan Saks
Range Algorithms, Views and Actions: A Comprehensive Guide
Dvir Yitzchaki
Structured Concurrency: Writing Safer Concurrent Code with Coroutines and Algorithms
Lewis Baker
The Truth of a Procedure
Lisa Lippincott
Reading Binary Data with Style: A Serialization Framework for C++17
Tony Wasserka
Next generation unit testing using static reflection
Manu Sánchez
The C++ ABI for Dummies
Louis Dionne
The Dawn of a New Error
Phil Nash

15:15 MDT
Don't Package Your Libraries, Write Packagable Libraries! (Part 2)
Robert Schumacher
Safe Software for Autonomous Mobility With Modern C++
Andreas Pasternak
Infiltrating a Code Base: Moving Toward a Better C
Brian Ruth
The Art of Breaking Things: a new tool for fighting against Hyrum’s law in the new world of concept-driven design
David Hollman
Back to Basics: Smart Pointers
Arthur O'Dwyer
From STL to Ranges: Using Ranges Effectively
Jeff Garland
How C++ Beats All Other Languages at Card Games: Using Integers as Arrays of Bitfields a.k.a. SWAR Techniques
Eduardo Madrid

15:50 MDT
Generators, Coroutines and Other Brain Unrolling Sweetness
Adi Shavit
Mesh: Automatically Compacting Your C++ Application's Memory
Emery Berger
The Design of the C++ Runtime for AWS Lambda
Marco Magdy
Behind the Scenes of a C++ Build System
Jussi Pakkanen

16:00 MDT
Speaker Portraits

16:45 MDT
Back to Basics: Virtual Dispatch and its Alternatives
Inbal Levi
Solve Hard Problems Quickly Using SAT Solvers
Martin Hořeňovský
Path Tracing Three Ways: A Study of C++ Style
Matt Godbolt
Reducing Template Compilation Overhead, Using Features from C++11, 14, 17, and 20.
Jorg Brown
Floating-Point charconv: Making Your Code 10x Faster With C++17's Final Boss
Stephan T. Lavavej
test_resource: The pmr Detective
Attila Feher
C++ Class Natures in Their Canonical Form and How to Find Them
Peter Sommerlad
In-place Construction: the Routine Complexities of Efficiency
Ben Deane

18:30 MDT
Meet the Speakers Dinner

20:30 MDT
CppCon 2020 Kick-off Meeting
Bob Steagall
Lightning Talks
Phil Nash

 
Friday, September 20
 
08:00 MDT
Cpp.Chat - Live Episode!
Jon Kalb • Phil Nash

09:00 MDT
Back to Basics: Exception Handling and Exception Safety
Ben Saks
Higher-order functions in Modern C++: existing techniques and `function_ref`
Vittorio Romeo
What a View! Building Your Own (Lazy) Range Adaptors (part 1 of 2)
Christopher Di Bella
Faster Compile Times and Better Performance: Bringing Just-in-Time Compilation to C++
Hal Finkel
Releasing C++ Toolchains Weekly in a 'Live at Head' World
Jorge Gorbe Moya • Jordan Rupprecht
Naming is Hard: Let's Do Better
Kate Gregory
Some Programming Myths Revisited
Patrice Roy

10:30 MDT
Back to Basics: Lambdas from Scratch
Arthur O'Dwyer
std::midpoint? How Hard Could it Be?
Marshall Clow
What a View! Building Your Own (Lazy) Range Adaptors (part 2 of 2)
Christopher Di Bella
Deprecating volatile
JF Bastien
A Critical Look at the Coding Standards Landscape
Michael Price
Polymorphism != Virtual: Easy, Flexible Runtime Polymorphism Without Inheritance
John Bandela
The Smart Pointers I Wish I Had
Matthew Fleming

12:00 MDT
CppCon 2020 Planning Committee Work Session
Bob Steagall
Lightning Talks
Phil Nash
Open Content Sessions: TBA
6 Algorithmic Journeys with Concepts
Taras Shevchenko
Diversity and Inclusion in C++
Guy Davidson • Simon Brand • Christopher Di Bella • Satabdi Das • Allison Vacanti • Duygu Cakmak

13:30 MDT
Back to Basics: Type Erasure
Arthur O'Dwyer
From Functions to Lambdas: How Do C++ Callables _Really_ Work?
Walter E. Brown
Modern Linux C++ debugging tools - under the covers
Greg Law
Faster Code Through Parallelism on CPUs and GPUs
David Olsen
Catch <unicode up arrow>: Unicode for C++23
JeanHeyd Meneide
Objects vs Values: Value Oriented Programming in an Object Oriented World
Tony Van Eerd
Using C++20's Three-way Comparison ＜=＞
Jonathan Müller

14:45 MDT
What is C++
Chandler Carruth • Titus Winters
`unique_pseudofunction`: N overloads for the price of 1
Filipp Gelman
The Networking TS in Practice: Patterns for Real World Problems
Robert Leahy
Great C++ is_trivial
Jason Turner
Embrace Modern Technology: Using HTML 5 for GUI in C++
Borislav Stanimirov
C++20: The small things
Timur Doumler
Building Modules
Michael Spencer

16:15 MDT
De-fragmenting C++: Making Exceptions and RTTI More Affordable and Usable (“Simplifying C++” #6 of N)
Herb Sutter

20:30 MDT
Using HTML 5 for GUI in C++ Addendum
Borislav Stanimirov

 
Saturday, September 21
 
09:00 MDT
Accelerated TDD: For More Productive C++
Phil Nash
Applied `constexpr`: Doing More Work At Compile Time
Jason Turner
Building C++ Code with Cmake
David Faure
Exploiting Modern C++: Building Highly-Dependable Software
Matthew Butler
Generic Programming 2.0 with Concepts and Ranges
Christopher Di Bella
Parallelism in Modern C++: From CPU to GPU
Michael Wong • Gordon Brown

 
Sunday, September 22
 
09:00 MDT
Accelerated TDD: For More Productive C++
Phil Nash
Building C++ Code with Cmake
David Faure
Exploiting Modern C++: Building Highly-Dependable Software
Matthew Butler
Generic Programming 2.0 with Concepts and Ranges
Christopher Di Bella
Parallelism in Modern C++: From CPU to GPU
Michael Wong • Gordon Brown

 
