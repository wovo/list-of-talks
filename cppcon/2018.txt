#locked
Saturday, September 22
 
09:00 PDT
// not findable on youtube
//#cppcon-2018-0001
Advanced and Modern C++ Programming: The Tricky Parts
Nicolai Josuttis
// not on youtube?
// #cppcon-2018-0002
Concurrency with Modern C++
Rainer Grimm
#cppcon-2018-0003
Interface Design for Modern C++
Bob Steagall
// not on youtube
// #cppcon-2018-0004
Modern C++ Template Programming
Stephen Dewhurst
// not on youtube
//#cppcon-2018-0005
Modernizing Your C++
Michael Caisse
// not on youtube
//#cppcon-2018-0006
Thinking Small
Patrice Roy

 
Sunday, September 23
 
09:00 PDT
Advanced and Modern C++ Programming: The Tricky Parts
Nicolai Josuttis
Concurrency with Modern C++
Rainer Grimm
#cppcon-2018-0009
Engage, Entertain, Educate: Technical Speaking that Works
Andrei Alexandrescu • Kate Gregory • Scott Meyers
Interface Design for Modern C++
Bob Steagall
Modern C++ Template Programming
Stephen Dewhurst
Modernizing Your C++
Michael Caisse
Thinking Small
Patrice Roy

17:30 PDT
Tee Shirt Night Dinner

20:00 PDT
Registration Reception

 
Monday, September 24
 
08:00 PDT
Registration

09:00 PDT
#cppcon-2018-0014
Concepts: The Future of Generic Programming (the future is here)
Bjarne Stroustrup

11:00 PDT
#cppcon-2018-0015
C++ Dependency Management: from Package Consumption to Project Development
Boris Kolpackov
#cppcon-2018-0016
The C++ Execution Model
Bryce Adelstein Lelbach
#cppcon-2018-0017
Enough string_view to Hang Ourselves
Victor Ciura
#cppcon-2018-0018
How to Teach C++ and Influence a Generation
Christopher Di Bella
#cppcon-2018-0019
Concepts and Contracts: When, What, and How
Michael Price
#cppcon-2018-0020
Text Formatting For a Future Range-Based Standard Library
Arno Schoedl

12:05 PDT
Book Signing: Herb Sutter
Herb Sutter

12:30 PDT
#cppcon-2018-0021
Trainers Panel I
Jon Kalb • Nicolai Josuttis • Scott Meyers • Michael Caisse • Stephen Dewhurst

13:35 PDT
Book Signing: Scott Meyers
Scott Meyers

14:00 PDT
#cppcon-2018-0022
Modern C++ Design (part 1 of 2)
Titus Winters
#cppcon-2018-0023
C++ Function Templates: How Do They Really Work?
Walter E. Brown
#cppcon-2018-0024
Contract Programming in C++(20) (part 1 of 2)
Alisdair Meredith
#cppcon-2018-0025
Crafting Embedded Domain-Specific Language (EDSL) In C++ using Metaprogramming, Operator Overloading, and Lambda Expressions
Gilang Hamidy
#cppcon-2018-0026
Secure Coding Best Practices: Your First Line Is The Last Line Of Defense (part 1 of 2)
Matthew Butler
#cppcon-2018-0027
Modern C++ Testing with Catch2
Phil Nash
#cppcon-2018-0028
How to Write Well-Behaved Value Wrappers
Simon Brand

15:15 PDT
#cppcon-2018-0029
High-Radix Concurrent C++
Olivier Giroux
#cppcon-2018-0030
An Allocator is a Handle to a Heap
Arthur O'Dwyer
#cppcon-2018-0031
Modern C++ Design (part 2 of 2)
Titus Winters
#cppcon-2018-0032
Contract Programming in C++(20) (part 2 of 2)
Alisdair Meredith
#cppcon-2018-0033
The Nightmare of Initialization in C++
Nicolai Josuttis
#cppcon-2018-0034
Secure Coding Best Practices: Your First Line Is The Last Line Of Defense (part 2 of 2)
Matthew Butler
#cppcon-2018-0035
How C++ Debuggers Work
Simon Brand

16:45 PDT
#cppcon-2018-0036
Git, CMake, Conan - How to ship and reuse our C++ projects
Mateusz Pusz
#cppcon-2018-0037
A Modern C++ Programming Model for GPUs using Khronos SYCL
Gordon Brown • Michael Wong
#cppcon-2018-0038
Emulating the Nintendo 3DS: Generative & Declarative Programming in Action
Tony Wasserka
#cppcon-2018-0039
Unwinding the Stack: Exploring How C++ Exceptions Work on Windows
James McNellis
#cppcon-2018-0040
Expect the Expected
Andrei Alexandrescu
#cppcon-2018-0041
Surprises in Object Lifetime
Jason Turner
#cppcon-2018-0042
Debug C++ Without Running
Anastasiia Kazakova

17:00 PDT
// not on youtube
// #cppcon-2018-0043
Speaker Portraits
Zoetica Ebb

20:30 PDT
#cppcon-2018-0044
Grill the Committee
Jon Kalb • Marshall Clow • Olivier Giroux • Howard Hinnant • Bjarne Stroustrup • Herb Sutter • Ville Voutilainen • Titus Winters

 
Tuesday, September 25
 
08:00 PDT
#cppcon-2018-0045
minidumps: gdb-compatible, software controlled core dumps
Matthew Fleming

09:00 PDT
#cppcon-2018-0046
What Do We Mean When We Say Nothing At All?
Kate Gregory
#cppcon-2018-0047
Compile Time Regular Expressions
Hana Dusíková
#cppcon-2018-0048
Source Instrumentation for Monitoring C++ in Production
Steven Simpson
#cppcon-2018-0049
DynaMix: A New Take on Polymorphism
Borislav Stanimirov
#cppcon-2018-0050
Avoiding Disasters with Strongly Typed C++
Arno Lepisk
#cppcon-2018-0051
Fancy Pointers for Fun and Profit
Bob Steagall
#cppcon-2018-0052
Regular Types and Why Do I Care ?
Victor Ciura

10:30 PDT
#cppcon-2018-0053
Patterns and Techniques Used in the Houdini 3D Graphics Application
Mark Elendt

12:05 PDT
Book Signing: Bjarne Stroustrup
Bjarne Stroustrup

12:30 PDT
#cppcon-2018-0054
Make World: The Most Miserable Place In C++
Jason Turner • Peter Bindels • Robert Maynard • Isabella Muerte • Jussi Pakkanen
#cppcon-2018-0055
CppCon Program Committee
Bryce Adelstein Lelbach • Jon Kalb
#cppcon-2018-0056
Grill the Résumés
Michał Dominiak • Steve Carroll • Kai Nelson
#cppcon-2018-0057
Debuggers for Modern Applications: Performance and Static Analysis
Samy Al Bahra

13:35 PDT
Book Signing: Nicolai Josuttis
Nicolai Josuttis

14:00 PDT
// not on youtube
// #cppcon-2018-0058
Speaker Portraits
Zoetica Ebb
#cppcon-2018-0059
The Exciting New Future of Safe Reclamation for High Performance
Paul McKenney • Maged Michael • Michael Wong
#cppcon-2018-0060
Making New Friends
Dan Saks
#cppcon-2018-0061
Operator Overloading: History, Principles and Practice
Ben Deane
#cppcon-2018-0062
What Could Possibly Go Wrong?: A Tale of Expectations and Exceptions
Simon Brand • Phil Nash
#cppcon-2018-0063
Woes of Scope Guards and Unique Resource - 5+ years in the making
Peter Sommerlad
#cppcon-2018-0064
Pessimistic Programming
Patrice Roy
#cppcon-2018-0065
More gdb and other Linux debugging wizardry
Greg Law

15:15 PDT
#cppcon-2018-0066
A Semi Compile/Run-time Map with (Nearly) Zero Overhead Lookup
Fabian Renn-Giles
#cppcon-2018-0067
Touring the "C++ Tip of the Week" Series
Jon Cohen • Matt Kulukundis
#cppcon-2018-0068
Overloading: The Bane of All Higher-Order Functions
Simon Brand
#cppcon-2018-0069
RVO is Harder than it Looks: the story of -Wreturn-std-move
Arthur O'Dwyer
#cppcon-2018-0070
Make It Fixable: Preparing for Security Vulnerability Reports
Patricia Aas
#cppcon-2018-0071
Funqual: user-defined statically-checked call tree constraints in C++
Andrew Nelson

15:50 PDT
#cppcon-2018-0072
Talking to Typelists
Stephen Dewhurst
#cppcon-2018-0073
yomm2 - Fast Orthogonal Open (Multi) Methods
Jean-Louis Leroy
#cppcon-2018-0074
Memory Tagging and how it improves C++ memory safety
Kostya Serebryany
#cppcon-2018-0075
Teaching Old Compilers New Tricks: Transpiling C++17 to C++11
Tony Wasserka
#cppcon-2018-0076
Smart References: There and Back Again
Erik Valkering
#cppcon-2018-0077
Why and How to Roll Your Own std::function Implementation
Tom Poole

16:45 PDT
#cppcon-2018-0078
Frozen data structures in C++14
Serge Guelton
#cppcon-2018-0079
Lightweight 2D graphics with io2d
Guy Davidson
#cppcon-2018-0080
Named Arguments in C++ from Scratch
Richard Powell
#cppcon-2018-0081
Undefined Behavior is Not an Error
Barbara Geller • Ansel Sermersheim
#cppcon-2018-0082
Progress with C++ Modules
Nathan Sidwell
#cppcon-2018-0083
The Networking TS in Practice: Testable, Composable Asynchronous I/O in C++
Robert Leahy

18:00 PDT
Boost Community Dinner

20:30 PDT
#cppcon-2018-0084
Lightning Talks
Michael Caisse
#cppcon-2018-0085
Embedded C++
Odin Holmes • Ben Saks • Dan Saks • Brett Searles • Andrew Sloss
#cppcon-2018-0086
Tool Time
Phil Nash

 
Wednesday, September 26
 
08:00 PDT
// not on youtube
// #cppcon-2018-0087
Big Infrastructure at a Small Scale
Matthew von Arx

08:30 PDT
#cppcon-2018-0088
ISO SG14 Working Meeting
Herb Sutter • Michael Wong

09:00 PDT
#cppcon-2018-0089
Fast Conversion From UTF-8 with C++, DFAs, and SSE Intrinsics
Bob Steagall
#cppcon-2018-0090
State Machines Battlefield - Naive vs STL vs Boost
Kris Jusiak
#cppcon-2018-0091
These Aren't the COM Objects You're Looking For
Victor Ciura
#cppcon-2018-0092
Software Vulnerabilities in C and C++
Patricia Aas
#cppcon-2018-0093
Ensuring Exception Safety Through Testing
Jon Cohen
#cppcon-2018-0094
Sane and Safe C++ Classes
Peter Sommerlad

10:30 PDT
#cppcon-2018-0095
Simplicity: not just for beginners
Kate Gregory

12:05 PDT
Book Signing: Andrei Alexandrescu
Andrei Alexandrescu

12:30 PDT
#cppcon-2018-0096
Mixing Managed and Unmanaged Code 
Kate Gregory • Lloyd Moore • Aaron R Robinson • Brett Searles
//title was: Mixing Managed and Unmanaged Code and Targeting Cross Platform Distributions

// not on youtube
// #cppcon-2018-0097
C++ Community Building Birds of a Feather
Jon Kalb • Bryce Adelstein Lelbach • Stephan T. Lavavej • Phil Nash • Jens Weller
#cppcon-2018-0098
Lesser known Linux Kernel APIs
Hannes Sowa
#cppcon-2018-0099
Inside yomm2
Jean-Louis Leroy

13:00 PDT
#cppcon-2018-0100
ISO SG14 Working Meeting
Herb Sutter • Michael Wong

14:00 PDT
#cppcon-2018-0101
What to Expect from a Next-Generation C++ Build System
Boris Kolpackov
#cppcon-2018-0102
How to Argue(ment): What Type Should I Use for My Function's Arguments
Richard Powell
#cppcon-2018-0103
Compile-time programming and reflection in C++20 and beyond
Louis Dionne
#cppcon-2018-0104
Understanding Optimizers: Helping the Compiler Help You
Nir Friedman
#cppcon-2018-0105
End of Error - Boost.SafeNumerics
Robert Ramey
#cppcon-2018-0106
Latest and Greatest in the Visual Studio Family for C++ Developers 2018
Steve Carroll • Marian Luparu

15:15 PDT
#cppcon-2018-0107
Don't package your libraries, write packagable libraries!
Robert Schumacher
#cppcon-2018-0108
A Little Order: Delving into the STL sorting algorithms
Fred Tingaud
#cppcon-2018-0109
The Embedded Device Under Your Desk: UEFI Applications With Modern C++
Morris Hafner
#cppcon-2018-0110
Refactoring Legacy Codebases with LibTooling
James Bennett
#cppcon-2018-0111
To Kill a Mocking Framework: Tools and Techniques for Testing Callbacks Using Standard C++
Alastair Rankine
#cppcon-2018-0112
What's new in Visual Studio Code for C++ development
Rong Lu

15:30 PDT
ISO SG14 Working Meeting
Herb Sutter • Michael Wong

15:50 PDT
#cppcon-2018-0113
Compiling Multi-Million Line C++ Code Bases Effortlessly with the Meson Build System
Jussi Pakkanen
#cppcon-2018-0114
Easy::Jit: A Just-in-Time compilation library for C++
Juan Manuel Martinez Caamaño
#cppcon-2018-0115
Multi-Precision Arithmetic for Cryptology in C++, at Run-Time and at Compile-Time
Niek J. Bouman
#cppcon-2018-0116
Save $$ Testing Code the Playback-Based Way
William Clements
#cppcon-2018-0117
Datum: A Trivially Constructible, Bitwise Copyable Compact Value-semantic Variant Type
Rishi Wani
#cppcon-2018-0118
Value Semantics: Fast, Safe, and Correct by Default
Nicole Mazzuca

16:45 PDT
#cppcon-2018-0119
Memory Latency Troubles You? Nano-coroutines to the Rescue! (Using Coroutines TS, of Course)
Gor Nishanov
#cppcon-2018-0120
105 STL Algorithms in Less Than an Hour
Jonathan Boccara
#cppcon-2018-0121
C++ in Elvenland
Serge Guelton
#cppcon-2018-0122
Modern C++ in Embedded Systems - The Saga Continues
Michael Caisse
#cppcon-2018-0123
Using Compile-time Code Generation to build an LLVM IR Pattern Matcher
Pablo Halpern
#cppcon-2018-0124
Accelerating Applications on a GPU with CUDA C++
Michael Gopshtein
#cppcon-2018-0125
Parsing C++
Timur Doumler • Dmitry Kozhevnikov

18:45 PDT
#cppcon-2018-0126
Cross-platform C++ development is challenging - let tools help!
Marc Goodner

19:00 PDT
#cppcon-2018-0127
C++ Audio Meetup
Timur Doumler • Ed Davies

20:30 PDT
Lightning Talks
#cppcon-2018-0128
Optimizing Code Speed and Space with Build Time Switches
Ian Bearman • Chandler Carruth • Xiang Fan • Brett Searles • Michael Wong

 
Thursday, September 27
 
08:00 PDT
#cppcon-2018-0129
Cpp.Chat - Live Episode! Interview with Nicolai Josuttis.
Nicolai Josuttis • Jon Kalb • Phil Nash
#cppcon-2018-0130
Mock Interviews
Simon Brand

09:00 PDT
#cppcon-2018-0131
Build Systems: a Simple Solution to a Complicated Problem
Peter Bindels
#cppcon-2018-0132
Inside Visual C++' Parallel Algorithms
#cppcon-2018-0133
Billy O'Neal
Using Template Magic to Automatically Generate Hybrid CPU/GPU-Code
Elmar Westphal
#cppcon-2018-0134
Writing Standard Library Compliant Data Structures and Algorithms
Marc Gregoire
#cppcon-2018-0135
Concepts As She Is Spoke
Arthur O'Dwyer
#cppcon-2018-0136
Better Tools in Your Clang Toolbox: Extending clang-tidy With Your Custom Checks
Victor Ciura
#cppcon-2018-0137
OOP Is Dead, Long Live Data-oriented Design
Stoyan Nikolov

10:30 PDT
#cppcon-2018-0138
Thoughts on a More Powerful and Simpler C++ (5 of N)
Herb Sutter

12:05 PDT
Book Signing: Arthur O'Dwyer
Arthur O'Dwyer

12:30 PDT
#cppcon-2018-0139
Machine Learning with C++ BoF
Peter Goldsborough
#cppcon-2018-0140
Trainers Panel II
Jon Kalb • Rainer Grimm • Dan Saks • Jason Turner
#cppcon-2018-0141
Software Security
Patricia Aas • Matthew Butler • Eva Conti • Matt Miller • Michael Wong

13:35 PDT
Book Signing: Marc Gregoire
Marc Gregoire

14:00 PDT
#cppcon-2018-0142
What do you mean "thread-safe"?
Geoffrey Romer
#cppcon-2018-0143
From Metaprogramming Tricks to Elegance: Custom Overload Sets and Inline SFINAE for Truly Generic Interfaces
Vincent Reverdy
#cppcon-2018-0144
Building a C++ Reflection System in One Weekend Using Clang and LLVM
Arvid Gerstmann
#cppcon-2018-0145
Design for Performance: Practical Experience
Fedor Pikus
#cppcon-2018-0146
Early Modern C++: How to Handle a C++03 Codebase in $CURRENT_YEAR
Mathieu Ropert
#cppcon-2018-0147
Signed integers are two's complement
JF Bastien
#cppcon-2018-0148
Implementing the C++ Core Guidelines’ Lifetime Safety Profile in Clang
Matthias Gehre • Gábor Horváth

15:15 PDT
#cppcon-2018-0149
C++ Cryptozoology - A Compendium of Cryptic Characters
Adi Shavit
#cppcon-2018-0150
Let's Intercept OpenGL Function Calls...for Logging!
Mike Shah
#cppcon-2018-0151
Effective replacement of dynamic polymorphism with std::variant
Mateusz Pusz
#cppcon-2018-0152
Better C++ using Machine Learning on Large Projects
Nicolas Fleury • Mathieu Nayrolles
#cppcon-2018-0153
ConcurrencyCheck - Static Analyzer for Concurrency Issues in Modern C++
Anna Gringauze
#cppcon-2018-0154
Co- and Contra-: Adding a Little Variance
Michał Dominiak

15:50 PDT
#cppcon-2018-0155
Scaling Financial Transaction using 0MQ and JSON
Kevin Carpenter
#cppcon-2018-0156
Interactive C++ Compilation (REPL) Done in a Tiny and Embeddable Way
Viktor Kirilov
#cppcon-2018-0157
Dealing with aliasing using contracts
Gábor Horváth
#cppcon-2018-0158
C++ Everywhere with WebAssembly
Damien Buhl
#cppcon-2018-0159
Engineering Software: integral types
Andrei Zlate-Podani
#cppcon-2018-0160
Liberating the Debugging Experience with the GDB Python API
Jeff Trull

16:00 PDT
// not on youtube
// #cppcon-2018-0161
Speaker Portraits
Zoetica Ebb

16:45 PDT
#cppcon-2018-0162
Compute More in Less Time Using C++ Simd Wrapper Libraries
Jefferson Amstutz
#cppcon-2018-0163
Development strategies: You've written a library - now what?
Marshall Clow
#cppcon-2018-0164
Rapid Prototyping of Graphics Shaders in Modern C++
Valentin Galea
#cppcon-2018-0165
Class Template Argument Deduction for Everyone
Stephan T. Lavavej
#cppcon-2018-0166
Concepts in 60: Everything you need to know and nothing you don't
Andrew Sutton
#cppcon-2018-0167
Initialization, Shutdown, and constexpr
Greg Falcon

18:30 PDT
Meet the Speakers Dinner

20:30 PDT
#cppcon-2018-0168
CppCon 2019 Kick-off Meeting
Bob Steagall
#cppcon-2018-0169
Lightning Talks
Michael Caisse
#cppcon-2018-0170
Creating the Complete Build Package
Manuel Klimek • Boris Kolpackov • Paddy McDonald • Robert Schumacher • Brett Searles • Titus Winters

 
Friday, September 28
 
08:00 PDT
#cppcon-2018-0171
Cpp.Chat - Live Episode! Interview with Herb Sutter.
Jon Kalb • Phil Nash • Herb Sutter
#cppcon-2018-0172
Run-Time Polymorphism BoF
Norman Birkett
#cppcon-2018-0173
Emacs BoF
Jeff Trull

09:00 PDT
#cppcon-2018-0174
Bringing C++ 17 Parallel Algorithms to a standard library near you
Thomas Rodgers
#cppcon-2018-0175
Interfaces matter: High Performance and Heap Allocated Containers
John Woolverton
#cppcon-2018-0176
Applied Best Practices
Jason Turner
#cppcon-2018-0177
Class template argument deduction in C++17
Timur Doumler
#cppcon-2018-0178
C++ Modules and Large-Scale Development
John Lakos
#cppcon-2018-0179
Feather: A Modern C++ Web Development Framework
Yu Qi

10:30 PDT
#cppcon-2018-0180
Concurrency Challenges of Interrupt Service Routines
Odin Holmes
#cppcon-2018-0181
The Bits Between the Bits: How We Get to main()
Matt Godbolt
#cppcon-2018-0182
Better Code: Human Interface
Sean Parent
#cppcon-2018-0183
Moving Faster: Everyday efficiency in modern C++
Alan Talbot
#cppcon-2018-0184
Scripting at the Speed of Thought: Lua and C++ with sol3
JeanHeyd Meneide
#cppcon-2018-0185
Large-Scale Changes at Google: Lessons Learned From Five Years of Mass Migrations
Hyrum Wright

12:00 PDT
#cppcon-2018-0187
CppCon 2019 Planning Committee Work Session
Bob Steagall

// not on youtube
// #cppcon-2018-0188
Diversity and Inclusion in C++
Bryce Adelstein Lelbach • Patricia Aas • Barbara Geller • Kate Gregory • JeanHeyd Meneide

13:30 PDT
#cppcon-2018-0189
Easy to Use, Hard to Misuse: Declarative Style in C++
Ben Deane
#cppcon-2018-0190
Standard Library Compatibility Guidelines
Titus Winters
#cppcon-2018-0191
The Salami Method for Cross Platform Development
Adi Shavit
#cppcon-2018-0192
Clangd: architecture of a scalable C++ language server
Ilya Biryukov
#cppcon-2018-0193
The Most Valuable Values
Juan Pedro Bolivar Puente
#cppcon-2018-0194
Get rich quick! Using Boost.Beast WebSockets and Networking TS
Vinnie Falco

14:45 PDT
cppcon-2018-0195
Spectre: Secrets, Side-Channels, Sandboxes, and Security
Chandler Carruth

16:45 PDT
Closing Panel: Spectre
Matt Godbolt • Chandler Carruth • Jon Masters • Matt Miller

18:10 PDT
#cppcon-2018-0196
Academic BoF
Bryce Adelstein Lelbach • Andrew Sutton

 
Saturday, September 29
 
09:00 PDT
#cppcon-2018-0197
Accelerated TDD: For More Productive C++
Phil Nash
#cppcon-2018-0198
C++ Best Practices
Jason Turner
#cppcon-2018-0199
Debugging and Profiling C++ Code on Linux
David Faure
#cppcon-2018-0200
Essential C++ Design
Klaus Iglberger
#cppcon-2018-0201
Generic Programming 2.0 with Concepts and Ranges
Christopher Di Bella
#cppcon-2018-0202
Leveraging Modern C++ for Embedded Systems
Ben Saks • Dan Saks
#cppcon-2018-0203
Parallel Programming with Modern C++: from CPU to GPU
Gordon Brown • Michael Wong
#cppcon-2018-0204
The Standard Library from Scratch
Arthur O'Dwyer

 
Sunday, September 30
 
09:00 PDT
#cppcon-2018-0205
Accelerated TDD: For More Productive C++
Phil Nash
#cppcon-2018-0206
C++ Best Practices
Jason Turner
#cppcon-2018-0207
Debugging and Profiling C++ Code on Linux
David Faure
#cppcon-2018-0208
Essential C++ Design
Klaus Iglberger
#cppcon-2018-0209
Generic Programming 2.0 with Concepts and Ranges
Christopher Di Bella
#cppcon-2018-0210
Leveraging Modern C++ for Embedded Systems
Ben Saks • Dan Saks
#cppcon-2018-0211
Parallel Programming with Modern C++: from CPU to GPU
Gordon Brown • Michael Wong
#cppcon-2018-0212
The Standard Library from Scratch
Arthur O'Dwyer
